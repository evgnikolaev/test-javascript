/*
	Знакомство с jQuery
	Библиотека, готовый набор методов, чтобы облегчить и ускорить часто выполняемые операции.

	Литература:
	https://api.jquery.com/
	https://www.w3schools.com/jquery/default.asp
	https://books.google.ru/books?id=9rCADQAAQBAJ&printsec=frontcover&hl=ru#v=onepage&q&f=false (Антон Шевчук)


	$(' css селектор, или НОДА ')  -  ВЕРНЕТ НЕ НОДУ, ВЕРНЕТ jQuery-ОБЪЕКТ с нодами (поэтому не нужно писать var $=3;)
	jQuery(' css селектор, или НОДА ') - ВЕРНЕТ НЕ НОДУ, ВЕРНЕТ jQuery-ОБЪЕКТ с нодами

	Синтаксис:
	$(' css селектор ').какой-нибудь метод().какой-нибудь метод()
	Все методы одновременно и геттеры и сеттеры, в зависимости от переданого параметра.

	Выборка, фильтрация:
	$('li') 				- все li
	$('li:first-child') 	- li первый ребенок
	$('li:last-child') 		- li последний ребенок
	$('li:first') 			- li первый элемент выборки, не важно ребенок он или нет
	$('li:last') 			- li последний элемент выборки, не важно ребенок он или нет
	$('li:even')			- все четные
	$('li:odd')				- все нечетные


	Фильтры
	.is()							- это что, ПО ВСЕЙ ВЫБОРКЕ?   возвращает boolean
	.is('span')						- это span,   $('p').is('span')
	.is('.one')						- это класс .one
	.is(':visible')					- это видимый (фильтры display:block)
	.is(':hidden')					- это невидимый (фильтры display:none)
	.is(' contains(" текст ") ')		- содержит ли текст

	.filter('.zero')	- отфильтруй из всей выборки те, что с классом .zero,    $('li').filter('.zero')
	.not()				- отфильтруй кроме
	.has(тег, класс, ид)		- элемент содержит?


	ДОМ
	.next()					- следующий сосед
	.prev()					- предыдущий сосед
	.children() 			- все дети
	.children('.zero') 		- ограничиваем поиск детей
	.find(' селектор ') 		- найди внутри элемента


	.length		- количество выборки
	.eq(1)		-	получить определенный jquery-объект из выборки
					$(li).eq(1) - получит первый jquery объект из выборки
					$(li).get(1)	- получит первую ноду из выборки
					$(li)[1] 	- получит первую ноду из выборки


	.text('')	- уствновить/получить содержимое в виде текста (без html)
	.html('')	- уствновить/получить содержимое в виде html

	.parent()				- родитель первый
	.parent(' селектор ' ) 	- родитель по селектору ( работает не всегда, лучше использовать parents()  )
	.parents(' селектор ' ) 	- родитель по селектору, без селектора вернет всех родителей

	.first() 		- первый элемент выборки
	.last() 		- последний элемент выборки
	.siblings() 	- все соседи элемента
	.closest( 'селектор' )		- аналог find(), найти в выборке ближайший элемент


	Атрибуты
	.attr('имя атрибута','значение') 	- получить атрибут
	.removeAttr()					- удалить атрибут
	.css() 							- установи в атрибут style
	.addClass() 					- добавь класс
	.removeClass() 					- удали класс
	.toggleClass() 					- toggle класс
	.hasClass()						- содержится класс?
	.data('')						- data-атрибуты
	.val('')						- содержимое value у input


	.each( 'callback' )		- примени к каждому элементу в выборке


	Создание
	.append( ' jquery-объект , нода , созданную ноду, строка  ' )		- вставить последним в элемент  $('#d').append( '<h2>Hello</h2>' ) в конец #d
	.prepend( ' jquery-объект , нода , созданную ноду, строка  ' )		- вставить вначало в элемент   $('#d').append( '<h2>Hello</h2>' ) в начало #d
	.after( ' jquery-объект , нода , созданную ноду, строка ' )			- вставляется после элемента el, сделаем нового соседа
	.before( ' jquery-объект , нода , созданную ноду, строка ' )		- вставить перед элементом el, сделаем нового соседа

	$('<span>New</span>') 	- создаст span, но в ДОМ его пока нет.
	.appendTo()				- вставить элемент в конец выборки, аналог append,  $('<span>New</span>').appendTo( $('li').eq(1) ) - вставить span в первую li
	.prependTo()			- вставить элемент в начало выборки, аналог prepend,  $('<span>New</span>').prependTo( $('li').eq(1) ) - вставить span в последнюю li
	.insertAfter()			- вставить элемент после элемента выборки, соседом
	.insertBefore()			- вставить элемент перед элементом выборки, соседом
	.clone()				- склонировать
	.remove()				- удалить


*/


var collection = document.getElementsByTagName('li');
for (var i = 0; i < collection.length; i++) {
	collection[i].style.background = 'green';
	collection[i].classList.add('one');
	collection[i].innerHTML += ' text';
}

$('li').css('background', 'red').addClass('one'); //метод применится всем элементам выборки
$('li').each(function (index) {
	// console.log(index);
	// console.log(this);//конкретная нода
	$(this).text($(this).text() + ' ' + index);
});


